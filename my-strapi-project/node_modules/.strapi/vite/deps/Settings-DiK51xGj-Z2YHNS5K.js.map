{
  "version": 3,
  "sources": ["../../../@strapi/plugin-documentation/dist/_chunks/Settings-DiK51xGj.mjs"],
  "sourcesContent": ["import { jsx, jsxs } from \"react/jsx-runtime\";\nimport { Field, Button, Box, Flex, Typography, Grid, Toggle, TextInput, Main } from \"@strapi/design-system\";\nimport { translatedErrors, useRBAC, Layouts, useNotification, useAPIErrorHandler, Page } from \"@strapi/strapi/admin\";\nimport { useIntl } from \"react-intl\";\nimport * as React from \"react\";\nimport { Check, Eye, EyeStriked } from \"@strapi/icons\";\nimport { Formik, Form } from \"formik\";\nimport { styled } from \"styled-components\";\nimport * as yup from \"yup\";\nimport { P as PERMISSIONS } from \"./index-YnqsO7ap.mjs\";\nimport { g as getTrad, u as useGetInfoQuery, c as useUpdateSettingsMutation } from \"./getTrad-BCVqzyys.mjs\";\nconst isBaseQueryError = (error) => {\n  return error.name !== void 0;\n};\nconst schema = yup.object().shape({\n  restrictedAccess: yup.boolean(),\n  password: yup.string().when(\"restrictedAccess\", (value, initSchema) => {\n    return value ? initSchema.required(translatedErrors.required.id).min(8).matches(/[a-z]/, \"components.Input.error.contain.lowercase\").matches(/[A-Z]/, \"components.Input.error.contain.uppercase\").matches(/\\d/, \"components.Input.error.contain.number\") : initSchema;\n  })\n});\nconst FieldActionWrapper = styled(Field.Action)`\n  svg {\n    height: 1.6rem;\n    width: 1.6rem;\n    path {\n      fill: ${({ theme }) => theme.colors.neutral600};\n    }\n  }\n`;\nconst SettingsForm = ({ data, onSubmit }) => {\n  const { formatMessage } = useIntl();\n  const [passwordShown, setPasswordShown] = React.useState(false);\n  const { allowedActions } = useRBAC(PERMISSIONS);\n  return /* @__PURE__ */ jsx(\n    Formik,\n    {\n      enableReinitialize: true,\n      initialValues: {\n        restrictedAccess: data?.documentationAccess.restrictedAccess || false,\n        password: \"\"\n      },\n      onSubmit,\n      validationSchema: schema,\n      children: ({\n        handleSubmit,\n        values,\n        handleChange,\n        errors,\n        setFieldTouched,\n        setFieldValue,\n        setFieldError,\n        dirty\n      }) => {\n        return /* @__PURE__ */ jsxs(Form, { noValidate: true, onSubmit: handleSubmit, children: [\n          /* @__PURE__ */ jsx(\n            Layouts.Header,\n            {\n              title: formatMessage({\n                id: getTrad(\"plugin.name\"),\n                defaultMessage: \"Documentation\"\n              }),\n              subtitle: formatMessage({\n                id: getTrad(\"pages.SettingsPage.header.description\"),\n                defaultMessage: \"Configure the documentation plugin\"\n              }),\n              primaryAction: /* @__PURE__ */ jsx(\n                Button,\n                {\n                  type: \"submit\",\n                  startIcon: /* @__PURE__ */ jsx(Check, {}),\n                  disabled: !dirty && allowedActions.canUpdate,\n                  children: formatMessage({\n                    id: getTrad(\"pages.SettingsPage.Button.save\"),\n                    defaultMessage: \"Save\"\n                  })\n                }\n              )\n            }\n          ),\n          /* @__PURE__ */ jsx(Layouts.Content, { children: /* @__PURE__ */ jsx(\n            Box,\n            {\n              background: \"neutral0\",\n              hasRadius: true,\n              shadow: \"filterShadow\",\n              paddingTop: 6,\n              paddingBottom: 6,\n              paddingLeft: 7,\n              paddingRight: 7,\n              children: /* @__PURE__ */ jsxs(Flex, { direction: \"column\", alignItems: \"stretch\", gap: 4, children: [\n                /* @__PURE__ */ jsx(Typography, { variant: \"delta\", tag: \"h2\", children: formatMessage({\n                  id: \"global.settings\",\n                  defaultMessage: \"Settings\"\n                }) }),\n                /* @__PURE__ */ jsxs(Grid.Root, { gap: 4, children: [\n                  /* @__PURE__ */ jsx(Grid.Item, { col: 6, s: 12, direction: \"column\", alignItems: \"stretch\", children: /* @__PURE__ */ jsxs(\n                    Field.Root,\n                    {\n                      name: \"restrictedAccess\",\n                      hint: formatMessage({\n                        id: getTrad(\"pages.SettingsPage.toggle.hint\"),\n                        defaultMessage: \"Make the documentation endpoint private\"\n                      }),\n                      children: [\n                        /* @__PURE__ */ jsx(Field.Label, { children: formatMessage({\n                          id: getTrad(\"pages.SettingsPage.toggle.label\"),\n                          defaultMessage: \"Restricted Access\"\n                        }) }),\n                        /* @__PURE__ */ jsx(\n                          Toggle,\n                          {\n                            checked: values.restrictedAccess,\n                            onChange: () => {\n                              if (values.restrictedAccess === true) {\n                                setFieldValue(\"password\", \"\", false);\n                                setFieldTouched(\"password\", false, false);\n                                setFieldError(\"password\", void 0);\n                              }\n                              setFieldValue(\"restrictedAccess\", !values.restrictedAccess, false);\n                            },\n                            onLabel: \"On\",\n                            offLabel: \"Off\"\n                          }\n                        ),\n                        /* @__PURE__ */ jsx(Field.Hint, {})\n                      ]\n                    }\n                  ) }),\n                  values.restrictedAccess && /* @__PURE__ */ jsx(Grid.Item, { col: 6, s: 12, direction: \"column\", alignItems: \"stretch\", children: /* @__PURE__ */ jsxs(\n                    Field.Root,\n                    {\n                      name: \"password\",\n                      error: errors.password ? formatMessage({\n                        id: errors.password,\n                        defaultMessage: errors.password\n                      }) : void 0,\n                      children: [\n                        /* @__PURE__ */ jsx(Field.Label, { children: formatMessage({\n                          id: \"global.password\",\n                          defaultMessage: \"Password\"\n                        }) }),\n                        /* @__PURE__ */ jsx(\n                          TextInput,\n                          {\n                            placeholder: \"**********\",\n                            type: passwordShown ? \"text\" : \"password\",\n                            value: values.password,\n                            onChange: handleChange,\n                            endAction: /* @__PURE__ */ jsx(\n                              FieldActionWrapper,\n                              {\n                                onClick: (e) => {\n                                  e.stopPropagation();\n                                  setPasswordShown((prev) => !prev);\n                                },\n                                label: formatMessage(\n                                  passwordShown ? {\n                                    id: \"Auth.form.password.show-password\",\n                                    defaultMessage: \"Show password\"\n                                  } : {\n                                    id: \"Auth.form.password.hide-password\",\n                                    defaultMessage: \"Hide password\"\n                                  }\n                                ),\n                                children: passwordShown ? /* @__PURE__ */ jsx(Eye, {}) : /* @__PURE__ */ jsx(EyeStriked, {})\n                              }\n                            )\n                          }\n                        ),\n                        /* @__PURE__ */ jsx(Field.Error, {})\n                      ]\n                    }\n                  ) })\n                ] })\n              ] })\n            }\n          ) })\n        ] });\n      }\n    }\n  );\n};\nconst SettingsPage = () => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const {\n    _unstableFormatAPIError: formatAPIError,\n    _unstableFormatValidationErrors: formatValidationErrors\n  } = useAPIErrorHandler();\n  const { data, isError, isLoading, isFetching } = useGetInfoQuery();\n  const [updateSettings] = useUpdateSettingsMutation();\n  const onUpdateSettings = async (body, formik) => {\n    return updateSettings({ body }).unwrap().then(() => {\n      toggleNotification({\n        type: \"success\",\n        message: formatMessage({\n          id: getTrad(\"notification.update.success\"),\n          defaultMessage: \"Successfully updated settings\"\n        })\n      });\n    }).catch((err) => {\n      if (isBaseQueryError(err) && err.name === \"ValidationError\") {\n        toggleNotification({\n          type: \"danger\",\n          message: formatAPIError(err)\n        });\n      }\n    });\n  };\n  if (isLoading || isFetching) {\n    return /* @__PURE__ */ jsx(Page.Loading, {});\n  }\n  if (isError) {\n    return /* @__PURE__ */ jsx(Page.Error, {});\n  }\n  return /* @__PURE__ */ jsx(Main, { children: /* @__PURE__ */ jsx(SettingsForm, { data, onSubmit: onUpdateSettings }) });\n};\nexport {\n  SettingsPage\n};\n"],
  "mappings": "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",
  "names": ["create"]
}
